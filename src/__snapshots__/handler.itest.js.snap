// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mutation confirmPinger confirms an existing pinger 1`] = `
Object {
  "data": Object {
    "confirmPinger": true,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Mutation confirmPinger fails confirming a pinger with wrong credentials, but still responds with status = true 1`] = `
Object {
  "data": Object {
    "confirmPinger": true,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Mutation confirmPinger fails confirming with missing \`confirm_key\` 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    Object {
      "extensions": Object {
        "code": "GRAPHQL_VALIDATION_FAILED",
      },
      "locations": Array [
        Object {
          "column": 13,
          "line": 3,
        },
      ],
      "message": "Field \\"confirmPinger\\" argument \\"confirm_key\\" of type \\"String!\\" is required, but it was not provided.",
    },
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Mutation confirmPinger fails confirming with missing \`id\` 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    Object {
      "extensions": Object {
        "code": "GRAPHQL_VALIDATION_FAILED",
      },
      "locations": Array [
        Object {
          "column": 13,
          "line": 3,
        },
      ],
      "message": "Field \\"confirmPinger\\" argument \\"id\\" of type \\"Int!\\" is required, but it was not provided.",
    },
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Mutation unsubscribePinger fails unsubscribing a pinger with wrong credentials, but still responds with status = true 1`] = `
Object {
  "data": Object {
    "unsubscribePinger": true,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Mutation unsubscribePinger fails unsubscribing with missing \`id\` 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    Object {
      "extensions": Object {
        "code": "GRAPHQL_VALIDATION_FAILED",
      },
      "locations": Array [
        Object {
          "column": 13,
          "line": 3,
        },
      ],
      "message": "Field \\"unsubscribePinger\\" argument \\"id\\" of type \\"Int!\\" is required, but it was not provided.",
    },
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Mutation unsubscribePinger fails unsubscribing with missing \`unsubscribe_key\` 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    Object {
      "extensions": Object {
        "code": "GRAPHQL_VALIDATION_FAILED",
      },
      "locations": Array [
        Object {
          "column": 13,
          "line": 3,
        },
      ],
      "message": "Field \\"unsubscribePinger\\" argument \\"unsubscribe_key\\" of type \\"String!\\" is required, but it was not provided.",
    },
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Mutation unsubscribePinger unsubscribes all pingers of an email 1`] = `
Object {
  "data": Object {
    "unsubscribePinger": true,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Mutation unsubscribePinger unsubscribes an existing pinger 1`] = `
Object {
  "data": Object {
    "unsubscribePinger": true,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query getPropertiesForPinger fails authenticating and returns nothing 1`] = `
Object {
  "data": Object {
    "getPropertiesForPinger": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;
