type Query {
  properties(
    filter: PropertyFilter
    limit: Int
  ): Properties!
}

input PropertyFilter {
  created_at: FilterString
  published_at: FilterString
  region: FilterString
  category: FilterString
  type: FilterString
  price: FilterInt
  rooms: FilterInt
  area: FilterInt
  floor: FilterInt
  source: FilterString
  url: FilterString
  foreign_id: FilterString
}

type PropertySummary {
  count: Int!
  price: PropertyPriceSummary!
}

type PropertyPriceSummary {
  min: Int
  max: Int
  mean: Int
  median: Int
  mode: Int
  standardDev: Int
}

type PropertyData {
  id: Int!
  url: String!
  content: String!
  images: [String]
  price: Int!
  rooms: Int
  area: Int
  lat: Float
  lng: Float
}

type Properties {
  results: [PropertyData!]
  summary: PropertySummary
}

input FilterString {
  # equality
  eq: String
  neq: String

  # lexicographical comparison
  gt: String
  gte: String
  lt: String
  lte: String

  in: [String]
  nin: [String]
}

input FilterInt {
  # equality
  eq: Int
  neq: Int

  # lexicographical comparison
  gt: Int
  gte: Int
  lt: Int
  lte: Int

  in: [Int]
  nin: [Int]
}
