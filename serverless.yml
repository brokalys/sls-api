service: sls-api

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  cfLogs: true
  logRetentionInDays: 7
  versionFunctions: false
  timeout: 10
  logs:
    restApi: true
  apiKeys:
    - slsPinger:
        - name: ${self:provider.stage}-slsPingerKey
          description: API key used by sls-pinger
    - slsCrawler:
        - name: ${self:provider.stage}-slsCrawlerKey
          description: API key used by sls crawlers
    - slsDataExtraction:
        - name: ${self:provider.stage}-slsDataExtractionKey
          description: API key used by sls-data-extraction
    - slsStaticApi:
        - name: ${self:provider.stage}-slsStaticApiKey
          description: API key used by sls-static-api
    - development:
        - name: ${self:provider.stage}-development
          description: Development API Key
  usagePlan:
    - slsPinger:
        quota:
          limit: 2000000
          offset: 1
          period: MONTH
        throttle:
          burstLimit: 2000
          rateLimit: 1000
    - slsCrawler:
        quota:
          limit: 2000000
          offset: 1
          period: MONTH
        throttle:
          burstLimit: 1000
          rateLimit: 500
    - slsDataExtraction:
        quota:
          limit: 100
          offset: 1
          period: MONTH
        throttle:
          burstLimit: 10
          rateLimit: 10
    - slsStaticApi:
        quota:
          limit: 1000
          offset: 1
          period: MONTH
        throttle:
          burstLimit: 50
          rateLimit: 50
    - development:
        quota:
          limit: 500
          offset: 1
          period: MONTH
        throttle:
          burstLimit: 50
          rateLimit: 50

functions:
  graphql:
    name: ${self:provider.stage}-GraphQLApi
    description: GraphQL API of Brokalys.
    handler: src/handler.graphqlHandler
    events:
      - http:
          path: /
          method: post
          cors: true
      - http:
          path: /
          method: get

plugins:
  - serverless-webpack
  - serverless-domain-manager
  - serverless-plugin-aws-alerts
  - serverless-offline

custom:
  customDomain:
    domainName: api.brokalys.com
    stage: prod
    certificateName: '*.brokalys.com'
    createRoute53Record: true
    endpointType: edge

  alerts:
    stages:
      - prod
    topics:
      alarm:
        topic: ${self:provider.stage}-${self:service}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: matiss@brokalys.com
      ok:
        topic: ${self:provider.stage}-${self:service}-alerts-ok
        notifications:
          - protocol: email
            endpoint: matiss@brokalys.com
    definitions:
      functionErrors:
        description: 'SLS API has an error that needs to be fixed'
        treatMissingData: notBreaching
        evaluationPeriods: 10
        datapointsToAlarm: 5
    alarms:
      - functionErrors

  serverless-offline:
    useChildProcesses: true

  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules:
      forceExclude:
        - aws-sdk

        # These peerDependencies are not actually used in the project, but are
        # breaking SLS deployments
        - mssql
        - mysql2
        - pg
        - sqlite3
    packager: yarn
